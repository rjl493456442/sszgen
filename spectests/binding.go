// Code generated by sszgen. DO NOT EDIT.

//go:build !nosszgen
// +build !nosszgen

package spectests

import "github.com/rjl493456442/sszgen/ssz"

func (obj *AggregateAndProof) SizeSSZ() int {
	s := 108
	if obj.Aggregate == nil {
		obj.Aggregate = new(Attestation)
	}
	s += obj.Aggregate.SizeSSZ()
	return s
}

func (obj *AggregateAndProof) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.Index = _v0
	_v2, _e3 := ssz.DecodeUint32(s)
	if _e3 != nil {
		return _e3
	}
	_v4, _e5 := ssz.DecodeBytes(s)
	if _e5 != nil {
		return _e5
	}
	obj.SelectionProof = [96]byte(_v4)
	_ = _v2
	if obj.Aggregate == nil {
		obj.Aggregate = new(Attestation)
	}
	if err := obj.Aggregate.UnmarshalSSZ(s); err != nil {
		return err
	}
	return nil
}

func (obj *Attestation) SizeSSZ() int {
	s := 228
	s += len(obj.AggregationBits)
	return s
}

func (obj *Attestation) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint32(s)
	if _e1 != nil {
		return _e1
	}
	if obj.Data == nil {
		obj.Data = new(AttestationData)
	}
	if err := obj.Data.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.Signature = [96]byte(_v2)
	_ = _v0
	_v4, _e5 := ssz.DecodeBytes(s)
	if _e5 != nil {
		return _e5
	}
	obj.AggregationBits = _v4
	return nil
}

func (obj *AttestationData) SizeSSZ() int {
	s := 128
	return s
}

func (obj *AttestationData) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.Slot = Slot(_v0)
	_v2, _e3 := ssz.DecodeUint64(s)
	if _e3 != nil {
		return _e3
	}
	obj.Index = _v2
	_v4, _e5 := ssz.DecodeBytes(s)
	if _e5 != nil {
		return _e5
	}
	obj.BeaconBlockHash = [32]byte(_v4)
	if obj.Source == nil {
		obj.Source = new(Checkpoint)
	}
	if err := obj.Source.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.Target == nil {
		obj.Target = new(Checkpoint)
	}
	if err := obj.Target.UnmarshalSSZ(s); err != nil {
		return err
	}
	return nil
}

func (obj *AttesterSlashing) SizeSSZ() int {
	s := 8
	if obj.Attestation1 == nil {
		obj.Attestation1 = new(IndexedAttestation)
	}
	s += obj.Attestation1.SizeSSZ()
	if obj.Attestation2 == nil {
		obj.Attestation2 = new(IndexedAttestation)
	}
	s += obj.Attestation2.SizeSSZ()
	return s
}

func (obj *AttesterSlashing) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint32(s)
	if _e1 != nil {
		return _e1
	}
	_v2, _e3 := ssz.DecodeUint32(s)
	if _e3 != nil {
		return _e3
	}
	s.Reset(_v0 - _v2)
	if obj.Attestation1 == nil {
		obj.Attestation1 = new(IndexedAttestation)
	}
	if err := obj.Attestation1.UnmarshalSSZ(s); err != nil {
		return err
	}
	_ = _v2
	if obj.Attestation2 == nil {
		obj.Attestation2 = new(IndexedAttestation)
	}
	if err := obj.Attestation2.UnmarshalSSZ(s); err != nil {
		return err
	}
	return nil
}

func (obj *BLSToExecutionChange) SizeSSZ() int {
	s := 76
	return s
}

func (obj *BLSToExecutionChange) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.ValidatorIndex = _v0
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.FromBLSPubKey = [48]byte(_v2)
	_v4, _e5 := ssz.DecodeBytes(s)
	if _e5 != nil {
		return _e5
	}
	obj.ToExecutionAddress = [20]byte(_v4)
	return nil
}

func (obj *BeaconBlock) SizeSSZ() int {
	s := 84
	if obj.Body == nil {
		obj.Body = new(BeaconBlockBodyPhase0)
	}
	s += obj.Body.SizeSSZ()
	return s
}

func (obj *BeaconBlock) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.Slot = _v0
	_v2, _e3 := ssz.DecodeUint64(s)
	if _e3 != nil {
		return _e3
	}
	obj.ProposerIndex = _v2
	_v4, _e5 := ssz.DecodeBytes(s)
	if _e5 != nil {
		return _e5
	}
	obj.ParentRoot = _v4
	_v6, _e7 := ssz.DecodeBytes(s)
	if _e7 != nil {
		return _e7
	}
	obj.StateRoot = _v6
	_v8, _e9 := ssz.DecodeUint32(s)
	if _e9 != nil {
		return _e9
	}
	_ = _v8
	if obj.Body == nil {
		obj.Body = new(BeaconBlockBodyPhase0)
	}
	if err := obj.Body.UnmarshalSSZ(s); err != nil {
		return err
	}
	return nil
}

func (obj *BeaconBlockBodyAltair) SizeSSZ() int {
	s := 380
	s += len(obj.ProposerSlashings) * 416
	for _, _v0 := range obj.AttesterSlashings {
		s += 4
		if _v0 == nil {
			_v0 = new(AttesterSlashing)
		}
		s += _v0.SizeSSZ()
	}
	for _, _v1 := range obj.Attestations {
		s += 4
		if _v1 == nil {
			_v1 = new(Attestation)
		}
		s += _v1.SizeSSZ()
	}
	s += len(obj.Deposits) * 1240
	s += len(obj.VoluntaryExits) * 112
	return s
}

func (obj *BeaconBlockBodyAltair) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.RandaoReveal = _v0
	if obj.Eth1Data == nil {
		obj.Eth1Data = new(Eth1Data)
	}
	if err := obj.Eth1Data.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.Graffiti = [32]byte(_v2)
	_v4, _e5 := ssz.DecodeUint32(s)
	if _e5 != nil {
		return _e5
	}
	_v6, _e7 := ssz.DecodeUint32(s)
	if _e7 != nil {
		return _e7
	}
	_v8, _e9 := ssz.DecodeUint32(s)
	if _e9 != nil {
		return _e9
	}
	_v10, _e11 := ssz.DecodeUint32(s)
	if _e11 != nil {
		return _e11
	}
	_v12, _e13 := ssz.DecodeUint32(s)
	if _e13 != nil {
		return _e13
	}
	if obj.SyncAggregate == nil {
		obj.SyncAggregate = new(SyncAggregate)
	}
	if err := obj.SyncAggregate.UnmarshalSSZ(s); err != nil {
		return err
	}
	s.Reset(_v4 - _v6)
	for _i14 := 0; _i14 < len(obj.ProposerSlashings); _i14 += 1 {
		if obj.ProposerSlashings[_i14] == nil {
			obj.ProposerSlashings[_i14] = new(ProposerSlashing)
		}
		if err := obj.ProposerSlashings[_i14].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v6 - _v8)

	var (
		_v16 []uint32
		_v17 uint32
		_e18 error
	)
	for _i15 := 0; _i15 < len(obj.AttesterSlashings); _i15 += 1 {
		_v17, _e18 = ssz.DecodeUint32(s)
		if _e18 != nil {
			return _e18
		}
		_v16 = append(_v16, _v17)
	}
	for _i15 := 0; _i15 < len(obj.AttesterSlashings); _i15 += 1 {
		if _i15 == len(obj.AttesterSlashings)-1 {
		} else {
			s.Reset(_v16[_i15+1] - _v16[_i15])
		}
		if obj.AttesterSlashings[_i15] == nil {
			obj.AttesterSlashings[_i15] = new(AttesterSlashing)
		}
		if err := obj.AttesterSlashings[_i15].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v8 - _v10)

	var (
		_v20 []uint32
		_v21 uint32
		_e22 error
	)
	for _i19 := 0; _i19 < len(obj.Attestations); _i19 += 1 {
		_v21, _e22 = ssz.DecodeUint32(s)
		if _e22 != nil {
			return _e22
		}
		_v20 = append(_v20, _v21)
	}
	for _i19 := 0; _i19 < len(obj.Attestations); _i19 += 1 {
		if _i19 == len(obj.Attestations)-1 {
		} else {
			s.Reset(_v20[_i19+1] - _v20[_i19])
		}
		if obj.Attestations[_i19] == nil {
			obj.Attestations[_i19] = new(Attestation)
		}
		if err := obj.Attestations[_i19].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v10 - _v12)
	for _i23 := 0; _i23 < len(obj.Deposits); _i23 += 1 {
		if obj.Deposits[_i23] == nil {
			obj.Deposits[_i23] = new(Deposit)
		}
		if err := obj.Deposits[_i23].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	_ = _v12
	for _i24 := 0; _i24 < len(obj.VoluntaryExits); _i24 += 1 {
		if obj.VoluntaryExits[_i24] == nil {
			obj.VoluntaryExits[_i24] = new(SignedVoluntaryExit)
		}
		if err := obj.VoluntaryExits[_i24].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	return nil
}

func (obj *BeaconBlockBodyBellatrix) SizeSSZ() int {
	s := 8
	s += obj.BeaconBlockBodyAltair.SizeSSZ()
	if obj.ExecutionPayload == nil {
		obj.ExecutionPayload = new(ExecutionPayload)
	}
	s += obj.ExecutionPayload.SizeSSZ()
	return s
}

func (obj *BeaconBlockBodyBellatrix) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint32(s)
	if _e1 != nil {
		return _e1
	}
	_v2, _e3 := ssz.DecodeUint32(s)
	if _e3 != nil {
		return _e3
	}
	s.Reset(_v0 - _v2)
	if err := obj.BeaconBlockBodyAltair.UnmarshalSSZ(s); err != nil {
		return err
	}
	_ = _v2
	if obj.ExecutionPayload == nil {
		obj.ExecutionPayload = new(ExecutionPayload)
	}
	if err := obj.ExecutionPayload.UnmarshalSSZ(s); err != nil {
		return err
	}
	return nil
}

func (obj *BeaconBlockBodyCapella) SizeSSZ() int {
	s := 388
	s += len(obj.ProposerSlashings) * 416
	for _, _v0 := range obj.AttesterSlashings {
		s += 4
		if _v0 == nil {
			_v0 = new(AttesterSlashing)
		}
		s += _v0.SizeSSZ()
	}
	for _, _v1 := range obj.Attestations {
		s += 4
		if _v1 == nil {
			_v1 = new(Attestation)
		}
		s += _v1.SizeSSZ()
	}
	s += len(obj.Deposits) * 1240
	s += len(obj.VoluntaryExits) * 112
	if obj.ExecutionPayload == nil {
		obj.ExecutionPayload = new(ExecutionPayloadCapella)
	}
	s += obj.ExecutionPayload.SizeSSZ()
	s += len(obj.BlsToExecutionChanges) * 172
	return s
}

func (obj *BeaconBlockBodyCapella) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.RandaoReveal = _v0
	if obj.Eth1Data == nil {
		obj.Eth1Data = new(Eth1Data)
	}
	if err := obj.Eth1Data.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.Graffiti = [32]byte(_v2)
	_v4, _e5 := ssz.DecodeUint32(s)
	if _e5 != nil {
		return _e5
	}
	_v6, _e7 := ssz.DecodeUint32(s)
	if _e7 != nil {
		return _e7
	}
	_v8, _e9 := ssz.DecodeUint32(s)
	if _e9 != nil {
		return _e9
	}
	_v10, _e11 := ssz.DecodeUint32(s)
	if _e11 != nil {
		return _e11
	}
	_v12, _e13 := ssz.DecodeUint32(s)
	if _e13 != nil {
		return _e13
	}
	if obj.SyncAggregate == nil {
		obj.SyncAggregate = new(SyncAggregate)
	}
	if err := obj.SyncAggregate.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v14, _e15 := ssz.DecodeUint32(s)
	if _e15 != nil {
		return _e15
	}
	_v16, _e17 := ssz.DecodeUint32(s)
	if _e17 != nil {
		return _e17
	}
	s.Reset(_v4 - _v6)
	for _i18 := 0; _i18 < len(obj.ProposerSlashings); _i18 += 1 {
		if obj.ProposerSlashings[_i18] == nil {
			obj.ProposerSlashings[_i18] = new(ProposerSlashing)
		}
		if err := obj.ProposerSlashings[_i18].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v6 - _v8)

	var (
		_v20 []uint32
		_v21 uint32
		_e22 error
	)
	for _i19 := 0; _i19 < len(obj.AttesterSlashings); _i19 += 1 {
		_v21, _e22 = ssz.DecodeUint32(s)
		if _e22 != nil {
			return _e22
		}
		_v20 = append(_v20, _v21)
	}
	for _i19 := 0; _i19 < len(obj.AttesterSlashings); _i19 += 1 {
		if _i19 == len(obj.AttesterSlashings)-1 {
		} else {
			s.Reset(_v20[_i19+1] - _v20[_i19])
		}
		if obj.AttesterSlashings[_i19] == nil {
			obj.AttesterSlashings[_i19] = new(AttesterSlashing)
		}
		if err := obj.AttesterSlashings[_i19].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v8 - _v10)

	var (
		_v24 []uint32
		_v25 uint32
		_e26 error
	)
	for _i23 := 0; _i23 < len(obj.Attestations); _i23 += 1 {
		_v25, _e26 = ssz.DecodeUint32(s)
		if _e26 != nil {
			return _e26
		}
		_v24 = append(_v24, _v25)
	}
	for _i23 := 0; _i23 < len(obj.Attestations); _i23 += 1 {
		if _i23 == len(obj.Attestations)-1 {
		} else {
			s.Reset(_v24[_i23+1] - _v24[_i23])
		}
		if obj.Attestations[_i23] == nil {
			obj.Attestations[_i23] = new(Attestation)
		}
		if err := obj.Attestations[_i23].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v10 - _v12)
	for _i27 := 0; _i27 < len(obj.Deposits); _i27 += 1 {
		if obj.Deposits[_i27] == nil {
			obj.Deposits[_i27] = new(Deposit)
		}
		if err := obj.Deposits[_i27].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v12 - _v14)
	for _i28 := 0; _i28 < len(obj.VoluntaryExits); _i28 += 1 {
		if obj.VoluntaryExits[_i28] == nil {
			obj.VoluntaryExits[_i28] = new(SignedVoluntaryExit)
		}
		if err := obj.VoluntaryExits[_i28].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v14 - _v16)
	if obj.ExecutionPayload == nil {
		obj.ExecutionPayload = new(ExecutionPayloadCapella)
	}
	if err := obj.ExecutionPayload.UnmarshalSSZ(s); err != nil {
		return err
	}
	_ = _v16
	for _i29 := 0; _i29 < len(obj.BlsToExecutionChanges); _i29 += 1 {
		if obj.BlsToExecutionChanges[_i29] == nil {
			obj.BlsToExecutionChanges[_i29] = new(SignedBLSToExecutionChange)
		}
		if err := obj.BlsToExecutionChanges[_i29].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	return nil
}

func (obj *BeaconBlockBodyPhase0) SizeSSZ() int {
	s := 220
	s += len(obj.ProposerSlashings) * 416
	for _, _v0 := range obj.AttesterSlashings {
		s += 4
		if _v0 == nil {
			_v0 = new(AttesterSlashing)
		}
		s += _v0.SizeSSZ()
	}
	for _, _v1 := range obj.Attestations {
		s += 4
		if _v1 == nil {
			_v1 = new(Attestation)
		}
		s += _v1.SizeSSZ()
	}
	s += len(obj.Deposits) * 1240
	s += len(obj.VoluntaryExits) * 112
	return s
}

func (obj *BeaconBlockBodyPhase0) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.RandaoReveal = _v0
	if obj.Eth1Data == nil {
		obj.Eth1Data = new(Eth1Data)
	}
	if err := obj.Eth1Data.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.Graffiti = [32]byte(_v2)
	_v4, _e5 := ssz.DecodeUint32(s)
	if _e5 != nil {
		return _e5
	}
	_v6, _e7 := ssz.DecodeUint32(s)
	if _e7 != nil {
		return _e7
	}
	_v8, _e9 := ssz.DecodeUint32(s)
	if _e9 != nil {
		return _e9
	}
	_v10, _e11 := ssz.DecodeUint32(s)
	if _e11 != nil {
		return _e11
	}
	_v12, _e13 := ssz.DecodeUint32(s)
	if _e13 != nil {
		return _e13
	}
	s.Reset(_v4 - _v6)
	for _i14 := 0; _i14 < len(obj.ProposerSlashings); _i14 += 1 {
		if obj.ProposerSlashings[_i14] == nil {
			obj.ProposerSlashings[_i14] = new(ProposerSlashing)
		}
		if err := obj.ProposerSlashings[_i14].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v6 - _v8)

	var (
		_v16 []uint32
		_v17 uint32
		_e18 error
	)
	for _i15 := 0; _i15 < len(obj.AttesterSlashings); _i15 += 1 {
		_v17, _e18 = ssz.DecodeUint32(s)
		if _e18 != nil {
			return _e18
		}
		_v16 = append(_v16, _v17)
	}
	for _i15 := 0; _i15 < len(obj.AttesterSlashings); _i15 += 1 {
		if _i15 == len(obj.AttesterSlashings)-1 {
		} else {
			s.Reset(_v16[_i15+1] - _v16[_i15])
		}
		if obj.AttesterSlashings[_i15] == nil {
			obj.AttesterSlashings[_i15] = new(AttesterSlashing)
		}
		if err := obj.AttesterSlashings[_i15].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v8 - _v10)

	var (
		_v20 []uint32
		_v21 uint32
		_e22 error
	)
	for _i19 := 0; _i19 < len(obj.Attestations); _i19 += 1 {
		_v21, _e22 = ssz.DecodeUint32(s)
		if _e22 != nil {
			return _e22
		}
		_v20 = append(_v20, _v21)
	}
	for _i19 := 0; _i19 < len(obj.Attestations); _i19 += 1 {
		if _i19 == len(obj.Attestations)-1 {
		} else {
			s.Reset(_v20[_i19+1] - _v20[_i19])
		}
		if obj.Attestations[_i19] == nil {
			obj.Attestations[_i19] = new(Attestation)
		}
		if err := obj.Attestations[_i19].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v10 - _v12)
	for _i23 := 0; _i23 < len(obj.Deposits); _i23 += 1 {
		if obj.Deposits[_i23] == nil {
			obj.Deposits[_i23] = new(Deposit)
		}
		if err := obj.Deposits[_i23].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	_ = _v12
	for _i24 := 0; _i24 < len(obj.VoluntaryExits); _i24 += 1 {
		if obj.VoluntaryExits[_i24] == nil {
			obj.VoluntaryExits[_i24] = new(SignedVoluntaryExit)
		}
		if err := obj.VoluntaryExits[_i24].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	return nil
}

func (obj *BeaconBlockCapella) SizeSSZ() int {
	s := 84
	if obj.Body == nil {
		obj.Body = new(BeaconBlockBodyCapella)
	}
	s += obj.Body.SizeSSZ()
	return s
}

func (obj *BeaconBlockCapella) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.Slot = _v0
	_v2, _e3 := ssz.DecodeUint64(s)
	if _e3 != nil {
		return _e3
	}
	obj.ProposerIndex = _v2
	_v4, _e5 := ssz.DecodeBytes(s)
	if _e5 != nil {
		return _e5
	}
	obj.ParentRoot = [32]byte(_v4)
	_v6, _e7 := ssz.DecodeBytes(s)
	if _e7 != nil {
		return _e7
	}
	obj.StateRoot = [32]byte(_v6)
	_v8, _e9 := ssz.DecodeUint32(s)
	if _e9 != nil {
		return _e9
	}
	_ = _v8
	if obj.Body == nil {
		obj.Body = new(BeaconBlockBodyCapella)
	}
	if err := obj.Body.UnmarshalSSZ(s); err != nil {
		return err
	}
	return nil
}

func (obj *BeaconBlockHeader) SizeSSZ() int {
	s := 112
	return s
}

func (obj *BeaconBlockHeader) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.Slot = _v0
	_v2, _e3 := ssz.DecodeUint64(s)
	if _e3 != nil {
		return _e3
	}
	obj.ProposerIndex = _v2
	_v4, _e5 := ssz.DecodeBytes(s)
	if _e5 != nil {
		return _e5
	}
	obj.ParentRoot = _v4
	_v6, _e7 := ssz.DecodeBytes(s)
	if _e7 != nil {
		return _e7
	}
	obj.StateRoot = _v6
	_v8, _e9 := ssz.DecodeBytes(s)
	if _e9 != nil {
		return _e9
	}
	obj.BodyRoot = _v8
	return nil
}

func (obj *BeaconState) SizeSSZ() int {
	s := 2687377
	s += len(obj.HistoricalRoots) * 32
	s += len(obj.Eth1DataVotes) * 72
	s += len(obj.Validators) * 121
	s += len(obj.Balances) * 8
	for _, _v0 := range obj.PreviousEpochAttestations {
		s += 4
		if _v0 == nil {
			_v0 = new(PendingAttestation)
		}
		s += _v0.SizeSSZ()
	}
	for _, _v1 := range obj.CurrentEpochAttestations {
		s += 4
		if _v1 == nil {
			_v1 = new(PendingAttestation)
		}
		s += _v1.SizeSSZ()
	}
	return s
}

func (obj *BeaconState) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.GenesisTime = _v0
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.GenesisValidatorsRoot = _v2
	_v4, _e5 := ssz.DecodeUint64(s)
	if _e5 != nil {
		return _e5
	}
	obj.Slot = _v4
	if obj.Fork == nil {
		obj.Fork = new(Fork)
	}
	if err := obj.Fork.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.LatestBlockHeader == nil {
		obj.LatestBlockHeader = new(BeaconBlockHeader)
	}
	if err := obj.LatestBlockHeader.UnmarshalSSZ(s); err != nil {
		return err
	}
	for _i6 := 0; _i6 < len(obj.BlockRoots); _i6 += 1 {
		_v7, _e8 := ssz.DecodeBytes(s)
		if _e8 != nil {
			return _e8
		}
		obj.BlockRoots[_i6] = _v7
	}
	for _i9 := 0; _i9 < len(obj.StateRoots); _i9 += 1 {
		_v10, _e11 := ssz.DecodeBytes(s)
		if _e11 != nil {
			return _e11
		}
		obj.StateRoots[_i9] = _v10
	}
	_v12, _e13 := ssz.DecodeUint32(s)
	if _e13 != nil {
		return _e13
	}
	if obj.Eth1Data == nil {
		obj.Eth1Data = new(Eth1Data)
	}
	if err := obj.Eth1Data.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v14, _e15 := ssz.DecodeUint32(s)
	if _e15 != nil {
		return _e15
	}
	_v16, _e17 := ssz.DecodeUint64(s)
	if _e17 != nil {
		return _e17
	}
	obj.Eth1DepositIndex = _v16
	_v18, _e19 := ssz.DecodeUint32(s)
	if _e19 != nil {
		return _e19
	}
	_v20, _e21 := ssz.DecodeUint32(s)
	if _e21 != nil {
		return _e21
	}
	for _i22 := 0; _i22 < len(obj.RandaoMixes); _i22 += 1 {
		_v23, _e24 := ssz.DecodeBytes(s)
		if _e24 != nil {
			return _e24
		}
		obj.RandaoMixes[_i22] = _v23
	}
	_v25, _e26 := ssz.DecodeUint64s(s)
	if _e26 != nil {
		return _e26
	}
	obj.Slashings = _v25
	_v27, _e28 := ssz.DecodeUint32(s)
	if _e28 != nil {
		return _e28
	}
	_v29, _e30 := ssz.DecodeUint32(s)
	if _e30 != nil {
		return _e30
	}
	_v31, _e32 := ssz.DecodeBytes(s)
	if _e32 != nil {
		return _e32
	}
	obj.JustificationBits = _v31
	if obj.PreviousJustifiedCheckpoint == nil {
		obj.PreviousJustifiedCheckpoint = new(Checkpoint)
	}
	if err := obj.PreviousJustifiedCheckpoint.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.CurrentJustifiedCheckpoint == nil {
		obj.CurrentJustifiedCheckpoint = new(Checkpoint)
	}
	if err := obj.CurrentJustifiedCheckpoint.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.FinalizedCheckpoint == nil {
		obj.FinalizedCheckpoint = new(Checkpoint)
	}
	if err := obj.FinalizedCheckpoint.UnmarshalSSZ(s); err != nil {
		return err
	}
	s.Reset(_v12 - _v14)
	for _i33 := 0; _i33 < len(obj.HistoricalRoots); _i33 += 1 {
		_v34, _e35 := ssz.DecodeBytes(s)
		if _e35 != nil {
			return _e35
		}
		obj.HistoricalRoots[_i33] = _v34
	}
	s.Reset(_v14 - _v18)
	for _i36 := 0; _i36 < len(obj.Eth1DataVotes); _i36 += 1 {
		if obj.Eth1DataVotes[_i36] == nil {
			obj.Eth1DataVotes[_i36] = new(Eth1Data)
		}
		if err := obj.Eth1DataVotes[_i36].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v18 - _v20)
	for _i37 := 0; _i37 < len(obj.Validators); _i37 += 1 {
		if obj.Validators[_i37] == nil {
			obj.Validators[_i37] = new(Validator)
		}
		if err := obj.Validators[_i37].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v20 - _v27)
	_v38, _e39 := ssz.DecodeUint64s(s)
	if _e39 != nil {
		return _e39
	}
	obj.Balances = _v38
	s.Reset(_v27 - _v29)

	var (
		_v41 []uint32
		_v42 uint32
		_e43 error
	)
	for _i40 := 0; _i40 < len(obj.PreviousEpochAttestations); _i40 += 1 {
		_v42, _e43 = ssz.DecodeUint32(s)
		if _e43 != nil {
			return _e43
		}
		_v41 = append(_v41, _v42)
	}
	for _i40 := 0; _i40 < len(obj.PreviousEpochAttestations); _i40 += 1 {
		if _i40 == len(obj.PreviousEpochAttestations)-1 {
		} else {
			s.Reset(_v41[_i40+1] - _v41[_i40])
		}
		if obj.PreviousEpochAttestations[_i40] == nil {
			obj.PreviousEpochAttestations[_i40] = new(PendingAttestation)
		}
		if err := obj.PreviousEpochAttestations[_i40].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	_ = _v29

	var (
		_v45 []uint32
		_v46 uint32
		_e47 error
	)
	for _i44 := 0; _i44 < len(obj.CurrentEpochAttestations); _i44 += 1 {
		_v46, _e47 = ssz.DecodeUint32(s)
		if _e47 != nil {
			return _e47
		}
		_v45 = append(_v45, _v46)
	}
	for _i44 := 0; _i44 < len(obj.CurrentEpochAttestations); _i44 += 1 {
		if _i44 == len(obj.CurrentEpochAttestations)-1 {
		} else {
			s.Reset(_v45[_i44+1] - _v45[_i44])
		}
		if obj.CurrentEpochAttestations[_i44] == nil {
			obj.CurrentEpochAttestations[_i44] = new(PendingAttestation)
		}
		if err := obj.CurrentEpochAttestations[_i44].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	return nil
}

func (obj *BeaconStateAltair) SizeSSZ() int {
	s := 2736629
	s += len(obj.HistoricalRoots) * 32
	s += len(obj.Eth1DataVotes) * 72
	s += len(obj.Validators) * 121
	s += len(obj.Balances) * 8
	s += len(obj.PreviousEpochParticipation)
	s += len(obj.CurrentEpochParticipation)
	s += len(obj.InactivityScores) * 8
	return s
}

func (obj *BeaconStateAltair) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.GenesisTime = _v0
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.GenesisValidatorsRoot = _v2
	_v4, _e5 := ssz.DecodeUint64(s)
	if _e5 != nil {
		return _e5
	}
	obj.Slot = _v4
	if obj.Fork == nil {
		obj.Fork = new(Fork)
	}
	if err := obj.Fork.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.LatestBlockHeader == nil {
		obj.LatestBlockHeader = new(BeaconBlockHeader)
	}
	if err := obj.LatestBlockHeader.UnmarshalSSZ(s); err != nil {
		return err
	}
	for _i6 := 0; _i6 < len(obj.BlockRoots); _i6 += 1 {
		_v7, _e8 := ssz.DecodeBytes(s)
		if _e8 != nil {
			return _e8
		}
		obj.BlockRoots[_i6] = _v7
	}
	for _i9 := 0; _i9 < len(obj.StateRoots); _i9 += 1 {
		_v10, _e11 := ssz.DecodeBytes(s)
		if _e11 != nil {
			return _e11
		}
		obj.StateRoots[_i9] = _v10
	}
	_v12, _e13 := ssz.DecodeUint32(s)
	if _e13 != nil {
		return _e13
	}
	if obj.Eth1Data == nil {
		obj.Eth1Data = new(Eth1Data)
	}
	if err := obj.Eth1Data.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v14, _e15 := ssz.DecodeUint32(s)
	if _e15 != nil {
		return _e15
	}
	_v16, _e17 := ssz.DecodeUint64(s)
	if _e17 != nil {
		return _e17
	}
	obj.Eth1DepositIndex = _v16
	_v18, _e19 := ssz.DecodeUint32(s)
	if _e19 != nil {
		return _e19
	}
	_v20, _e21 := ssz.DecodeUint32(s)
	if _e21 != nil {
		return _e21
	}
	for _i22 := 0; _i22 < len(obj.RandaoMixes); _i22 += 1 {
		_v23, _e24 := ssz.DecodeBytes(s)
		if _e24 != nil {
			return _e24
		}
		obj.RandaoMixes[_i22] = _v23
	}
	_v25, _e26 := ssz.DecodeUint64s(s)
	if _e26 != nil {
		return _e26
	}
	obj.Slashings = _v25
	_v27, _e28 := ssz.DecodeUint32(s)
	if _e28 != nil {
		return _e28
	}
	_v29, _e30 := ssz.DecodeUint32(s)
	if _e30 != nil {
		return _e30
	}
	_v31, _e32 := ssz.DecodeBytes(s)
	if _e32 != nil {
		return _e32
	}
	obj.JustificationBits = _v31
	if obj.PreviousJustifiedCheckpoint == nil {
		obj.PreviousJustifiedCheckpoint = new(Checkpoint)
	}
	if err := obj.PreviousJustifiedCheckpoint.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.CurrentJustifiedCheckpoint == nil {
		obj.CurrentJustifiedCheckpoint = new(Checkpoint)
	}
	if err := obj.CurrentJustifiedCheckpoint.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.FinalizedCheckpoint == nil {
		obj.FinalizedCheckpoint = new(Checkpoint)
	}
	if err := obj.FinalizedCheckpoint.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v33, _e34 := ssz.DecodeUint32(s)
	if _e34 != nil {
		return _e34
	}
	if obj.CurrentSyncCommittee == nil {
		obj.CurrentSyncCommittee = new(SyncCommittee)
	}
	if err := obj.CurrentSyncCommittee.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.NextSyncCommittee == nil {
		obj.NextSyncCommittee = new(SyncCommittee)
	}
	if err := obj.NextSyncCommittee.UnmarshalSSZ(s); err != nil {
		return err
	}
	s.Reset(_v12 - _v14)
	for _i35 := 0; _i35 < len(obj.HistoricalRoots); _i35 += 1 {
		_v36, _e37 := ssz.DecodeBytes(s)
		if _e37 != nil {
			return _e37
		}
		obj.HistoricalRoots[_i35] = _v36
	}
	s.Reset(_v14 - _v18)
	for _i38 := 0; _i38 < len(obj.Eth1DataVotes); _i38 += 1 {
		if obj.Eth1DataVotes[_i38] == nil {
			obj.Eth1DataVotes[_i38] = new(Eth1Data)
		}
		if err := obj.Eth1DataVotes[_i38].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v18 - _v20)
	for _i39 := 0; _i39 < len(obj.Validators); _i39 += 1 {
		if obj.Validators[_i39] == nil {
			obj.Validators[_i39] = new(Validator)
		}
		if err := obj.Validators[_i39].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v20 - _v27)
	_v40, _e41 := ssz.DecodeUint64s(s)
	if _e41 != nil {
		return _e41
	}
	obj.Balances = _v40
	s.Reset(_v27 - _v29)
	_v42, _e43 := ssz.DecodeBytes(s)
	if _e43 != nil {
		return _e43
	}
	obj.PreviousEpochParticipation = _v42
	s.Reset(_v29 - _v33)
	_v44, _e45 := ssz.DecodeBytes(s)
	if _e45 != nil {
		return _e45
	}
	obj.CurrentEpochParticipation = _v44
	_ = _v33
	_v46, _e47 := ssz.DecodeUint64s(s)
	if _e47 != nil {
		return _e47
	}
	obj.InactivityScores = _v46
	return nil
}

func (obj *BeaconStateBellatrix) SizeSSZ() int {
	s := 2736633
	s += len(obj.HistoricalRoots) * 32
	s += len(obj.Eth1DataVotes) * 72
	s += len(obj.Validators) * 121
	s += len(obj.Balances) * 8
	s += len(obj.PreviousEpochParticipation)
	s += len(obj.CurrentEpochParticipation)
	s += len(obj.InactivityScores) * 8
	if obj.LatestExecutionPayloadHeader == nil {
		obj.LatestExecutionPayloadHeader = new(ExecutionPayloadHeader)
	}
	s += obj.LatestExecutionPayloadHeader.SizeSSZ()
	return s
}

func (obj *BeaconStateBellatrix) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.GenesisTime = _v0
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.GenesisValidatorsRoot = _v2
	_v4, _e5 := ssz.DecodeUint64(s)
	if _e5 != nil {
		return _e5
	}
	obj.Slot = _v4
	if obj.Fork == nil {
		obj.Fork = new(Fork)
	}
	if err := obj.Fork.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.LatestBlockHeader == nil {
		obj.LatestBlockHeader = new(BeaconBlockHeader)
	}
	if err := obj.LatestBlockHeader.UnmarshalSSZ(s); err != nil {
		return err
	}
	for _i6 := 0; _i6 < len(obj.BlockRoots); _i6 += 1 {
		_v7, _e8 := ssz.DecodeBytes(s)
		if _e8 != nil {
			return _e8
		}
		obj.BlockRoots[_i6] = _v7
	}
	for _i9 := 0; _i9 < len(obj.StateRoots); _i9 += 1 {
		_v10, _e11 := ssz.DecodeBytes(s)
		if _e11 != nil {
			return _e11
		}
		obj.StateRoots[_i9] = _v10
	}
	_v12, _e13 := ssz.DecodeUint32(s)
	if _e13 != nil {
		return _e13
	}
	if obj.Eth1Data == nil {
		obj.Eth1Data = new(Eth1Data)
	}
	if err := obj.Eth1Data.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v14, _e15 := ssz.DecodeUint32(s)
	if _e15 != nil {
		return _e15
	}
	_v16, _e17 := ssz.DecodeUint64(s)
	if _e17 != nil {
		return _e17
	}
	obj.Eth1DepositIndex = _v16
	_v18, _e19 := ssz.DecodeUint32(s)
	if _e19 != nil {
		return _e19
	}
	_v20, _e21 := ssz.DecodeUint32(s)
	if _e21 != nil {
		return _e21
	}
	for _i22 := 0; _i22 < len(obj.RandaoMixes); _i22 += 1 {
		_v23, _e24 := ssz.DecodeBytes(s)
		if _e24 != nil {
			return _e24
		}
		obj.RandaoMixes[_i22] = _v23
	}
	_v25, _e26 := ssz.DecodeUint64s(s)
	if _e26 != nil {
		return _e26
	}
	obj.Slashings = _v25
	_v27, _e28 := ssz.DecodeUint32(s)
	if _e28 != nil {
		return _e28
	}
	_v29, _e30 := ssz.DecodeUint32(s)
	if _e30 != nil {
		return _e30
	}
	_v31, _e32 := ssz.DecodeBytes(s)
	if _e32 != nil {
		return _e32
	}
	obj.JustificationBits = _v31
	if obj.PreviousJustifiedCheckpoint == nil {
		obj.PreviousJustifiedCheckpoint = new(Checkpoint)
	}
	if err := obj.PreviousJustifiedCheckpoint.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.CurrentJustifiedCheckpoint == nil {
		obj.CurrentJustifiedCheckpoint = new(Checkpoint)
	}
	if err := obj.CurrentJustifiedCheckpoint.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.FinalizedCheckpoint == nil {
		obj.FinalizedCheckpoint = new(Checkpoint)
	}
	if err := obj.FinalizedCheckpoint.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v33, _e34 := ssz.DecodeUint32(s)
	if _e34 != nil {
		return _e34
	}
	if obj.CurrentSyncCommittee == nil {
		obj.CurrentSyncCommittee = new(SyncCommittee)
	}
	if err := obj.CurrentSyncCommittee.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.NextSyncCommittee == nil {
		obj.NextSyncCommittee = new(SyncCommittee)
	}
	if err := obj.NextSyncCommittee.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v35, _e36 := ssz.DecodeUint32(s)
	if _e36 != nil {
		return _e36
	}
	s.Reset(_v12 - _v14)
	for _i37 := 0; _i37 < len(obj.HistoricalRoots); _i37 += 1 {
		_v38, _e39 := ssz.DecodeBytes(s)
		if _e39 != nil {
			return _e39
		}
		obj.HistoricalRoots[_i37] = _v38
	}
	s.Reset(_v14 - _v18)
	for _i40 := 0; _i40 < len(obj.Eth1DataVotes); _i40 += 1 {
		if obj.Eth1DataVotes[_i40] == nil {
			obj.Eth1DataVotes[_i40] = new(Eth1Data)
		}
		if err := obj.Eth1DataVotes[_i40].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v18 - _v20)
	for _i41 := 0; _i41 < len(obj.Validators); _i41 += 1 {
		if obj.Validators[_i41] == nil {
			obj.Validators[_i41] = new(Validator)
		}
		if err := obj.Validators[_i41].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v20 - _v27)
	_v42, _e43 := ssz.DecodeUint64s(s)
	if _e43 != nil {
		return _e43
	}
	obj.Balances = _v42
	s.Reset(_v27 - _v29)
	_v44, _e45 := ssz.DecodeBytes(s)
	if _e45 != nil {
		return _e45
	}
	obj.PreviousEpochParticipation = _v44
	s.Reset(_v29 - _v33)
	_v46, _e47 := ssz.DecodeBytes(s)
	if _e47 != nil {
		return _e47
	}
	obj.CurrentEpochParticipation = _v46
	s.Reset(_v33 - _v35)
	_v48, _e49 := ssz.DecodeUint64s(s)
	if _e49 != nil {
		return _e49
	}
	obj.InactivityScores = _v48
	_ = _v35
	if obj.LatestExecutionPayloadHeader == nil {
		obj.LatestExecutionPayloadHeader = new(ExecutionPayloadHeader)
	}
	if err := obj.LatestExecutionPayloadHeader.UnmarshalSSZ(s); err != nil {
		return err
	}
	return nil
}

func (obj *BeaconStateCapella) SizeSSZ() int {
	s := 2736653
	s += len(obj.HistoricalRoots) * 32
	s += len(obj.Eth1DataVotes) * 72
	s += len(obj.Validators) * 121
	s += len(obj.Balances) * 8
	s += len(obj.PreviousEpochParticipation)
	s += len(obj.CurrentEpochParticipation)
	s += len(obj.InactivityScores) * 8
	if obj.LatestExecutionPayloadHeader == nil {
		obj.LatestExecutionPayloadHeader = new(ExecutionPayloadHeaderCapella)
	}
	s += obj.LatestExecutionPayloadHeader.SizeSSZ()
	s += len(obj.HistoricalSummaries) * 64
	return s
}

func (obj *BeaconStateCapella) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.GenesisTime = _v0
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.GenesisValidatorsRoot = [32]byte(_v2)
	_v4, _e5 := ssz.DecodeUint64(s)
	if _e5 != nil {
		return _e5
	}
	obj.Slot = _v4
	if obj.Fork == nil {
		obj.Fork = new(Fork)
	}
	if err := obj.Fork.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.LatestBlockHeader == nil {
		obj.LatestBlockHeader = new(BeaconBlockHeader)
	}
	if err := obj.LatestBlockHeader.UnmarshalSSZ(s); err != nil {
		return err
	}
	for _i6 := 0; _i6 < len(obj.BlockRoots); _i6 += 1 {
		_v7, _e8 := ssz.DecodeBytes(s)
		if _e8 != nil {
			return _e8
		}
		obj.BlockRoots[_i6] = [32]byte(_v7)
	}
	for _i9 := 0; _i9 < len(obj.StateRoots); _i9 += 1 {
		_v10, _e11 := ssz.DecodeBytes(s)
		if _e11 != nil {
			return _e11
		}
		obj.StateRoots[_i9] = [32]byte(_v10)
	}
	_v12, _e13 := ssz.DecodeUint32(s)
	if _e13 != nil {
		return _e13
	}
	if obj.Eth1Data == nil {
		obj.Eth1Data = new(Eth1Data)
	}
	if err := obj.Eth1Data.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v14, _e15 := ssz.DecodeUint32(s)
	if _e15 != nil {
		return _e15
	}
	_v16, _e17 := ssz.DecodeUint64(s)
	if _e17 != nil {
		return _e17
	}
	obj.Eth1DepositIndex = _v16
	_v18, _e19 := ssz.DecodeUint32(s)
	if _e19 != nil {
		return _e19
	}
	_v20, _e21 := ssz.DecodeUint32(s)
	if _e21 != nil {
		return _e21
	}
	for _i22 := 0; _i22 < len(obj.RandaoMixes); _i22 += 1 {
		_v23, _e24 := ssz.DecodeBytes(s)
		if _e24 != nil {
			return _e24
		}
		obj.RandaoMixes[_i22] = [32]byte(_v23)
	}
	_v25, _e26 := ssz.DecodeUint64s(s)
	if _e26 != nil {
		return _e26
	}
	obj.Slashings = _v25
	_v27, _e28 := ssz.DecodeUint32(s)
	if _e28 != nil {
		return _e28
	}
	_v29, _e30 := ssz.DecodeUint32(s)
	if _e30 != nil {
		return _e30
	}
	_v31, _e32 := ssz.DecodeBytes(s)
	if _e32 != nil {
		return _e32
	}
	obj.JustificationBits = [1]byte(_v31)
	if obj.PreviousJustifiedCheckpoint == nil {
		obj.PreviousJustifiedCheckpoint = new(Checkpoint)
	}
	if err := obj.PreviousJustifiedCheckpoint.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.CurrentJustifiedCheckpoint == nil {
		obj.CurrentJustifiedCheckpoint = new(Checkpoint)
	}
	if err := obj.CurrentJustifiedCheckpoint.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.FinalizedCheckpoint == nil {
		obj.FinalizedCheckpoint = new(Checkpoint)
	}
	if err := obj.FinalizedCheckpoint.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v33, _e34 := ssz.DecodeUint32(s)
	if _e34 != nil {
		return _e34
	}
	if obj.CurrentSyncCommittee == nil {
		obj.CurrentSyncCommittee = new(SyncCommittee)
	}
	if err := obj.CurrentSyncCommittee.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.NextSyncCommittee == nil {
		obj.NextSyncCommittee = new(SyncCommittee)
	}
	if err := obj.NextSyncCommittee.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v35, _e36 := ssz.DecodeUint32(s)
	if _e36 != nil {
		return _e36
	}
	_v37, _e38 := ssz.DecodeUint64(s)
	if _e38 != nil {
		return _e38
	}
	obj.NextWithdrawalIndex = _v37
	_v39, _e40 := ssz.DecodeUint64(s)
	if _e40 != nil {
		return _e40
	}
	obj.NextWithdrawalValidatorIndex = _v39
	_v41, _e42 := ssz.DecodeUint32(s)
	if _e42 != nil {
		return _e42
	}
	s.Reset(_v12 - _v14)
	for _i43 := 0; _i43 < len(obj.HistoricalRoots); _i43 += 1 {
		_v44, _e45 := ssz.DecodeBytes(s)
		if _e45 != nil {
			return _e45
		}
		obj.HistoricalRoots[_i43] = _v44
	}
	s.Reset(_v14 - _v18)
	for _i46 := 0; _i46 < len(obj.Eth1DataVotes); _i46 += 1 {
		if obj.Eth1DataVotes[_i46] == nil {
			obj.Eth1DataVotes[_i46] = new(Eth1Data)
		}
		if err := obj.Eth1DataVotes[_i46].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v18 - _v20)
	for _i47 := 0; _i47 < len(obj.Validators); _i47 += 1 {
		if obj.Validators[_i47] == nil {
			obj.Validators[_i47] = new(Validator)
		}
		if err := obj.Validators[_i47].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	s.Reset(_v20 - _v27)
	_v48, _e49 := ssz.DecodeUint64s(s)
	if _e49 != nil {
		return _e49
	}
	obj.Balances = _v48
	s.Reset(_v27 - _v29)
	_v50, _e51 := ssz.DecodeBytes(s)
	if _e51 != nil {
		return _e51
	}
	obj.PreviousEpochParticipation = _v50
	s.Reset(_v29 - _v33)
	_v52, _e53 := ssz.DecodeBytes(s)
	if _e53 != nil {
		return _e53
	}
	obj.CurrentEpochParticipation = _v52
	s.Reset(_v33 - _v35)
	_v54, _e55 := ssz.DecodeUint64s(s)
	if _e55 != nil {
		return _e55
	}
	obj.InactivityScores = _v54
	s.Reset(_v35 - _v41)
	if obj.LatestExecutionPayloadHeader == nil {
		obj.LatestExecutionPayloadHeader = new(ExecutionPayloadHeaderCapella)
	}
	if err := obj.LatestExecutionPayloadHeader.UnmarshalSSZ(s); err != nil {
		return err
	}
	_ = _v41
	for _i56 := 0; _i56 < len(obj.HistoricalSummaries); _i56 += 1 {
		if obj.HistoricalSummaries[_i56] == nil {
			obj.HistoricalSummaries[_i56] = new(HistoricalSummary)
		}
		if err := obj.HistoricalSummaries[_i56].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	return nil
}

func (obj *Checkpoint) SizeSSZ() int {
	s := 40
	return s
}

func (obj *Checkpoint) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.Epoch = _v0
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.Root = _v2
	return nil
}

func (obj *Deposit) SizeSSZ() int {
	s := 1240
	return s
}

func (obj *Deposit) UnmarshalSSZ(s *ssz.Stream) error {
	for _i0 := 0; _i0 < len(obj.Proof); _i0 += 1 {
		_v1, _e2 := ssz.DecodeBytes(s)
		if _e2 != nil {
			return _e2
		}
		obj.Proof[_i0] = _v1
	}
	if obj.Data == nil {
		obj.Data = new(DepositData)
	}
	if err := obj.Data.UnmarshalSSZ(s); err != nil {
		return err
	}
	return nil
}

func (obj *DepositData) SizeSSZ() int {
	s := 184
	return s
}

func (obj *DepositData) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.Pubkey = [48]byte(_v0)
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.WithdrawalCredentials = [32]byte(_v2)
	_v4, _e5 := ssz.DecodeUint64(s)
	if _e5 != nil {
		return _e5
	}
	obj.Amount = _v4
	_v6, _e7 := ssz.DecodeBytes(s)
	if _e7 != nil {
		return _e7
	}
	obj.Signature = _v6
	return nil
}

func (obj *DepositMessage) SizeSSZ() int {
	s := 88
	return s
}

func (obj *DepositMessage) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.Pubkey = _v0
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.WithdrawalCredentials = _v2
	_v4, _e5 := ssz.DecodeUint64(s)
	if _e5 != nil {
		return _e5
	}
	obj.Amount = _v4
	return nil
}

func (obj *ErrorResponse) SizeSSZ() int {
	s := 4
	s += len(obj.Message)
	return s
}

func (obj *ErrorResponse) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint32(s)
	if _e1 != nil {
		return _e1
	}
	_ = _v0
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.Message = _v2
	return nil
}

func (obj *Eth1Block) SizeSSZ() int {
	s := 48
	return s
}

func (obj *Eth1Block) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.Timestamp = _v0
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.DepositRoot = _v2
	_v4, _e5 := ssz.DecodeUint64(s)
	if _e5 != nil {
		return _e5
	}
	obj.DepositCount = _v4
	return nil
}

func (obj *Eth1Data) SizeSSZ() int {
	s := 72
	return s
}

func (obj *Eth1Data) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.DepositRoot = _v0
	_v2, _e3 := ssz.DecodeUint64(s)
	if _e3 != nil {
		return _e3
	}
	obj.DepositCount = _v2
	_v4, _e5 := ssz.DecodeBytes(s)
	if _e5 != nil {
		return _e5
	}
	obj.BlockHash = _v4
	return nil
}

func (obj *ExecutionPayload) SizeSSZ() int {
	s := 508
	s += len(obj.ExtraData)
	for _, _v0 := range obj.Transactions {
		s += 4
		s += len(_v0)
	}
	return s
}

func (obj *ExecutionPayload) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.ParentHash = [32]byte(_v0)
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.FeeRecipient = [20]byte(_v2)
	_v4, _e5 := ssz.DecodeBytes(s)
	if _e5 != nil {
		return _e5
	}
	obj.StateRoot = [32]byte(_v4)
	_v6, _e7 := ssz.DecodeBytes(s)
	if _e7 != nil {
		return _e7
	}
	obj.ReceiptsRoot = [32]byte(_v6)
	_v8, _e9 := ssz.DecodeBytes(s)
	if _e9 != nil {
		return _e9
	}
	obj.LogsBloom = [256]byte(_v8)
	_v10, _e11 := ssz.DecodeBytes(s)
	if _e11 != nil {
		return _e11
	}
	obj.PrevRandao = [32]byte(_v10)
	_v12, _e13 := ssz.DecodeUint64(s)
	if _e13 != nil {
		return _e13
	}
	obj.BlockNumber = _v12
	_v14, _e15 := ssz.DecodeUint64(s)
	if _e15 != nil {
		return _e15
	}
	obj.GasLimit = _v14
	_v16, _e17 := ssz.DecodeUint64(s)
	if _e17 != nil {
		return _e17
	}
	obj.GasUsed = _v16
	_v18, _e19 := ssz.DecodeUint64(s)
	if _e19 != nil {
		return _e19
	}
	obj.Timestamp = _v18
	_v20, _e21 := ssz.DecodeUint32(s)
	if _e21 != nil {
		return _e21
	}
	_v22, _e23 := ssz.DecodeBytes(s)
	if _e23 != nil {
		return _e23
	}
	obj.BaseFeePerGas = [32]byte(_v22)
	_v24, _e25 := ssz.DecodeBytes(s)
	if _e25 != nil {
		return _e25
	}
	obj.BlockHash = [32]byte(_v24)
	_v26, _e27 := ssz.DecodeUint32(s)
	if _e27 != nil {
		return _e27
	}
	s.Reset(_v20 - _v26)
	_v28, _e29 := ssz.DecodeBytes(s)
	if _e29 != nil {
		return _e29
	}
	obj.ExtraData = _v28
	_ = _v26

	var (
		_v31 []uint32
		_v32 uint32
		_e33 error
	)
	for _i30 := 0; _i30 < len(obj.Transactions); _i30 += 1 {
		_v32, _e33 = ssz.DecodeUint32(s)
		if _e33 != nil {
			return _e33
		}
		_v31 = append(_v31, _v32)
	}
	for _i30 := 0; _i30 < len(obj.Transactions); _i30 += 1 {
		if _i30 == len(obj.Transactions)-1 {
		} else {
			s.Reset(_v31[_i30+1] - _v31[_i30])
		}
		_v34, _e35 := ssz.DecodeBytes(s)
		if _e35 != nil {
			return _e35
		}
		obj.Transactions[_i30] = _v34
	}
	return nil
}

func (obj *ExecutionPayloadCapella) SizeSSZ() int {
	s := 512
	s += len(obj.ExtraData)
	for _, _v0 := range obj.Transactions {
		s += 4
		s += len(_v0)
	}
	s += len(obj.Withdrawals) * 44
	return s
}

func (obj *ExecutionPayloadCapella) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.ParentHash = [32]byte(_v0)
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.FeeRecipient = [20]byte(_v2)
	_v4, _e5 := ssz.DecodeBytes(s)
	if _e5 != nil {
		return _e5
	}
	obj.StateRoot = [32]byte(_v4)
	_v6, _e7 := ssz.DecodeBytes(s)
	if _e7 != nil {
		return _e7
	}
	obj.ReceiptsRoot = [32]byte(_v6)
	_v8, _e9 := ssz.DecodeBytes(s)
	if _e9 != nil {
		return _e9
	}
	obj.LogsBloom = [256]byte(_v8)
	_v10, _e11 := ssz.DecodeBytes(s)
	if _e11 != nil {
		return _e11
	}
	obj.PrevRandao = [32]byte(_v10)
	_v12, _e13 := ssz.DecodeUint64(s)
	if _e13 != nil {
		return _e13
	}
	obj.BlockNumber = _v12
	_v14, _e15 := ssz.DecodeUint64(s)
	if _e15 != nil {
		return _e15
	}
	obj.GasLimit = _v14
	_v16, _e17 := ssz.DecodeUint64(s)
	if _e17 != nil {
		return _e17
	}
	obj.GasUsed = _v16
	_v18, _e19 := ssz.DecodeUint64(s)
	if _e19 != nil {
		return _e19
	}
	obj.Timestamp = _v18
	_v20, _e21 := ssz.DecodeUint32(s)
	if _e21 != nil {
		return _e21
	}
	_v22, _e23 := ssz.DecodeBytes(s)
	if _e23 != nil {
		return _e23
	}
	obj.BaseFeePerGas = [32]byte(_v22)
	_v24, _e25 := ssz.DecodeBytes(s)
	if _e25 != nil {
		return _e25
	}
	obj.BlockHash = [32]byte(_v24)
	_v26, _e27 := ssz.DecodeUint32(s)
	if _e27 != nil {
		return _e27
	}
	_v28, _e29 := ssz.DecodeUint32(s)
	if _e29 != nil {
		return _e29
	}
	s.Reset(_v20 - _v26)
	_v30, _e31 := ssz.DecodeBytes(s)
	if _e31 != nil {
		return _e31
	}
	obj.ExtraData = _v30
	s.Reset(_v26 - _v28)

	var (
		_v33 []uint32
		_v34 uint32
		_e35 error
	)
	for _i32 := 0; _i32 < len(obj.Transactions); _i32 += 1 {
		_v34, _e35 = ssz.DecodeUint32(s)
		if _e35 != nil {
			return _e35
		}
		_v33 = append(_v33, _v34)
	}
	for _i32 := 0; _i32 < len(obj.Transactions); _i32 += 1 {
		if _i32 == len(obj.Transactions)-1 {
		} else {
			s.Reset(_v33[_i32+1] - _v33[_i32])
		}
		_v36, _e37 := ssz.DecodeBytes(s)
		if _e37 != nil {
			return _e37
		}
		obj.Transactions[_i32] = _v36
	}
	_ = _v28
	for _i38 := 0; _i38 < len(obj.Withdrawals); _i38 += 1 {
		if obj.Withdrawals[_i38] == nil {
			obj.Withdrawals[_i38] = new(Withdrawal)
		}
		if err := obj.Withdrawals[_i38].UnmarshalSSZ(s); err != nil {
			return err
		}
	}
	return nil
}

func (obj *ExecutionPayloadHeader) SizeSSZ() int {
	s := 536
	s += len(obj.ExtraData)
	return s
}

func (obj *ExecutionPayloadHeader) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.ParentHash = _v0
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.FeeRecipient = _v2
	_v4, _e5 := ssz.DecodeBytes(s)
	if _e5 != nil {
		return _e5
	}
	obj.StateRoot = _v4
	_v6, _e7 := ssz.DecodeBytes(s)
	if _e7 != nil {
		return _e7
	}
	obj.ReceiptsRoot = _v6
	_v8, _e9 := ssz.DecodeBytes(s)
	if _e9 != nil {
		return _e9
	}
	obj.LogsBloom = _v8
	_v10, _e11 := ssz.DecodeBytes(s)
	if _e11 != nil {
		return _e11
	}
	obj.PrevRandao = _v10
	_v12, _e13 := ssz.DecodeUint64(s)
	if _e13 != nil {
		return _e13
	}
	obj.BlockNumber = _v12
	_v14, _e15 := ssz.DecodeUint64(s)
	if _e15 != nil {
		return _e15
	}
	obj.GasLimit = _v14
	_v16, _e17 := ssz.DecodeUint64(s)
	if _e17 != nil {
		return _e17
	}
	obj.GasUsed = _v16
	_v18, _e19 := ssz.DecodeUint64(s)
	if _e19 != nil {
		return _e19
	}
	obj.Timestamp = _v18
	_v20, _e21 := ssz.DecodeUint32(s)
	if _e21 != nil {
		return _e21
	}
	_v22, _e23 := ssz.DecodeBytes(s)
	if _e23 != nil {
		return _e23
	}
	obj.BaseFeePerGas = _v22
	_v24, _e25 := ssz.DecodeBytes(s)
	if _e25 != nil {
		return _e25
	}
	obj.BlockHash = _v24
	_v26, _e27 := ssz.DecodeBytes(s)
	if _e27 != nil {
		return _e27
	}
	obj.TransactionsRoot = _v26
	_ = _v20
	_v28, _e29 := ssz.DecodeBytes(s)
	if _e29 != nil {
		return _e29
	}
	obj.ExtraData = _v28
	return nil
}

func (obj *ExecutionPayloadHeaderCapella) SizeSSZ() int {
	s := 568
	s += len(obj.ExtraData)
	return s
}

func (obj *ExecutionPayloadHeaderCapella) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.ParentHash = [32]byte(_v0)
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.FeeRecipient = [20]byte(_v2)
	_v4, _e5 := ssz.DecodeBytes(s)
	if _e5 != nil {
		return _e5
	}
	obj.StateRoot = [32]byte(_v4)
	_v6, _e7 := ssz.DecodeBytes(s)
	if _e7 != nil {
		return _e7
	}
	obj.ReceiptsRoot = [32]byte(_v6)
	_v8, _e9 := ssz.DecodeBytes(s)
	if _e9 != nil {
		return _e9
	}
	obj.LogsBloom = [256]byte(_v8)
	_v10, _e11 := ssz.DecodeBytes(s)
	if _e11 != nil {
		return _e11
	}
	obj.PrevRandao = [32]byte(_v10)
	_v12, _e13 := ssz.DecodeUint64(s)
	if _e13 != nil {
		return _e13
	}
	obj.BlockNumber = _v12
	_v14, _e15 := ssz.DecodeUint64(s)
	if _e15 != nil {
		return _e15
	}
	obj.GasLimit = _v14
	_v16, _e17 := ssz.DecodeUint64(s)
	if _e17 != nil {
		return _e17
	}
	obj.GasUsed = _v16
	_v18, _e19 := ssz.DecodeUint64(s)
	if _e19 != nil {
		return _e19
	}
	obj.Timestamp = _v18
	_v20, _e21 := ssz.DecodeUint32(s)
	if _e21 != nil {
		return _e21
	}
	_v22, _e23 := ssz.DecodeBytes(s)
	if _e23 != nil {
		return _e23
	}
	obj.BaseFeePerGas = [32]byte(_v22)
	_v24, _e25 := ssz.DecodeBytes(s)
	if _e25 != nil {
		return _e25
	}
	obj.BlockHash = [32]byte(_v24)
	_v26, _e27 := ssz.DecodeBytes(s)
	if _e27 != nil {
		return _e27
	}
	obj.TransactionsRoot = [32]byte(_v26)
	_v28, _e29 := ssz.DecodeBytes(s)
	if _e29 != nil {
		return _e29
	}
	obj.WithdrawalRoot = [32]byte(_v28)
	_ = _v20
	_v30, _e31 := ssz.DecodeBytes(s)
	if _e31 != nil {
		return _e31
	}
	obj.ExtraData = _v30
	return nil
}

func (obj *Fork) SizeSSZ() int {
	s := 16
	return s
}

func (obj *Fork) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.PreviousVersion = _v0
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.CurrentVersion = _v2
	_v4, _e5 := ssz.DecodeUint64(s)
	if _e5 != nil {
		return _e5
	}
	obj.Epoch = _v4
	return nil
}

func (obj *HistoricalBatch) SizeSSZ() int {
	s := 524288
	return s
}

func (obj *HistoricalBatch) UnmarshalSSZ(s *ssz.Stream) error {
	for _i0 := 0; _i0 < len(obj.BlockRoots); _i0 += 1 {
		_v1, _e2 := ssz.DecodeBytes(s)
		if _e2 != nil {
			return _e2
		}
		obj.BlockRoots[_i0] = [32]byte(_v1)
	}
	for _i3 := 0; _i3 < len(obj.StateRoots); _i3 += 1 {
		_v4, _e5 := ssz.DecodeBytes(s)
		if _e5 != nil {
			return _e5
		}
		obj.StateRoots[_i3] = [32]byte(_v4)
	}
	return nil
}

func (obj *HistoricalSummary) SizeSSZ() int {
	s := 64
	return s
}

func (obj *HistoricalSummary) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.BlockSummaryRoot = [32]byte(_v0)
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.StateSummaryRoot = [32]byte(_v2)
	return nil
}

func (obj *IndexedAttestation) SizeSSZ() int {
	s := 228
	s += len(obj.AttestationIndices) * 8
	return s
}

func (obj *IndexedAttestation) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint32(s)
	if _e1 != nil {
		return _e1
	}
	if obj.Data == nil {
		obj.Data = new(AttestationData)
	}
	if err := obj.Data.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.Signature = _v2
	_ = _v0
	_v4, _e5 := ssz.DecodeUint64s(s)
	if _e5 != nil {
		return _e5
	}
	obj.AttestationIndices = _v4
	return nil
}

func (obj *PendingAttestation) SizeSSZ() int {
	s := 148
	s += len(obj.AggregationBits)
	return s
}

func (obj *PendingAttestation) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint32(s)
	if _e1 != nil {
		return _e1
	}
	if obj.Data == nil {
		obj.Data = new(AttestationData)
	}
	if err := obj.Data.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v2, _e3 := ssz.DecodeUint64(s)
	if _e3 != nil {
		return _e3
	}
	obj.InclusionDelay = _v2
	_v4, _e5 := ssz.DecodeUint64(s)
	if _e5 != nil {
		return _e5
	}
	obj.ProposerIndex = _v4
	_ = _v0
	_v6, _e7 := ssz.DecodeBytes(s)
	if _e7 != nil {
		return _e7
	}
	obj.AggregationBits = _v6
	return nil
}

func (obj *ProposerSlashing) SizeSSZ() int {
	s := 416
	return s
}

func (obj *ProposerSlashing) UnmarshalSSZ(s *ssz.Stream) error {
	if obj.Header1 == nil {
		obj.Header1 = new(SignedBeaconBlockHeader)
	}
	if err := obj.Header1.UnmarshalSSZ(s); err != nil {
		return err
	}
	if obj.Header2 == nil {
		obj.Header2 = new(SignedBeaconBlockHeader)
	}
	if err := obj.Header2.UnmarshalSSZ(s); err != nil {
		return err
	}
	return nil
}

func (obj *SignedBLSToExecutionChange) SizeSSZ() int {
	s := 172
	return s
}

func (obj *SignedBLSToExecutionChange) UnmarshalSSZ(s *ssz.Stream) error {
	if obj.Message == nil {
		obj.Message = new(BLSToExecutionChange)
	}
	if err := obj.Message.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.Signature = [96]byte(_v0)
	return nil
}

func (obj *SignedBeaconBlock) SizeSSZ() int {
	s := 100
	if obj.Block == nil {
		obj.Block = new(BeaconBlock)
	}
	s += obj.Block.SizeSSZ()
	return s
}

func (obj *SignedBeaconBlock) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint32(s)
	if _e1 != nil {
		return _e1
	}
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.Signature = _v2
	_ = _v0
	if obj.Block == nil {
		obj.Block = new(BeaconBlock)
	}
	if err := obj.Block.UnmarshalSSZ(s); err != nil {
		return err
	}
	return nil
}

func (obj *SignedBeaconBlockCapella) SizeSSZ() int {
	s := 100
	if obj.Block == nil {
		obj.Block = new(BeaconBlockCapella)
	}
	s += obj.Block.SizeSSZ()
	return s
}

func (obj *SignedBeaconBlockCapella) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint32(s)
	if _e1 != nil {
		return _e1
	}
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.Signature = _v2
	_ = _v0
	if obj.Block == nil {
		obj.Block = new(BeaconBlockCapella)
	}
	if err := obj.Block.UnmarshalSSZ(s); err != nil {
		return err
	}
	return nil
}

func (obj *SignedBeaconBlockHeader) SizeSSZ() int {
	s := 208
	return s
}

func (obj *SignedBeaconBlockHeader) UnmarshalSSZ(s *ssz.Stream) error {
	if obj.Header == nil {
		obj.Header = new(BeaconBlockHeader)
	}
	if err := obj.Header.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.Signature = _v0
	return nil
}

func (obj *SignedVoluntaryExit) SizeSSZ() int {
	s := 112
	return s
}

func (obj *SignedVoluntaryExit) UnmarshalSSZ(s *ssz.Stream) error {
	if obj.Exit == nil {
		obj.Exit = new(VoluntaryExit)
	}
	if err := obj.Exit.UnmarshalSSZ(s); err != nil {
		return err
	}
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.Signature = [96]byte(_v0)
	return nil
}

func (obj *SigningRoot) SizeSSZ() int {
	s := 40
	return s
}

func (obj *SigningRoot) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.ObjectRoot = _v0
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.Domain = _v2
	return nil
}

func (obj *SyncAggregate) SizeSSZ() int {
	s := 160
	return s
}

func (obj *SyncAggregate) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.SyncCommiteeBits = _v0
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.SyncCommiteeSignature = [96]byte(_v2)
	return nil
}

func (obj *SyncCommittee) SizeSSZ() int {
	s := 24624
	return s
}

func (obj *SyncCommittee) UnmarshalSSZ(s *ssz.Stream) error {
	for _i0 := 0; _i0 < len(obj.PubKeys); _i0 += 1 {
		_v1, _e2 := ssz.DecodeBytes(s)
		if _e2 != nil {
			return _e2
		}
		obj.PubKeys[_i0] = _v1
	}
	_v3, _e4 := ssz.DecodeBytes(s)
	if _e4 != nil {
		return _e4
	}
	obj.AggregatePubKey = [48]byte(_v3)
	return nil
}

func (obj *Transfer) SizeSSZ() int {
	s := 184
	return s
}

func (obj *Transfer) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.Sender = _v0
	_v2, _e3 := ssz.DecodeUint64(s)
	if _e3 != nil {
		return _e3
	}
	obj.Recipient = _v2
	_v4, _e5 := ssz.DecodeUint64(s)
	if _e5 != nil {
		return _e5
	}
	obj.Amount = _v4
	_v6, _e7 := ssz.DecodeUint64(s)
	if _e7 != nil {
		return _e7
	}
	obj.Fee = _v6
	_v8, _e9 := ssz.DecodeUint64(s)
	if _e9 != nil {
		return _e9
	}
	obj.Slot = _v8
	_v10, _e11 := ssz.DecodeBytes(s)
	if _e11 != nil {
		return _e11
	}
	obj.Pubkey = _v10
	_v12, _e13 := ssz.DecodeBytes(s)
	if _e13 != nil {
		return _e13
	}
	obj.Signature = _v12
	return nil
}

func (obj *Validator) SizeSSZ() int {
	s := 121
	return s
}

func (obj *Validator) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeBytes(s)
	if _e1 != nil {
		return _e1
	}
	obj.Pubkey = _v0
	_v2, _e3 := ssz.DecodeBytes(s)
	if _e3 != nil {
		return _e3
	}
	obj.WithdrawalCredentials = _v2
	_v4, _e5 := ssz.DecodeUint64(s)
	if _e5 != nil {
		return _e5
	}
	obj.EffectiveBalance = _v4
	_v6, _e7 := ssz.DecodeBool(s)
	if _e7 != nil {
		return _e7
	}
	obj.Slashed = SlashedT(_v6)
	_v8, _e9 := ssz.DecodeUint64(s)
	if _e9 != nil {
		return _e9
	}
	obj.ActivationEligibilityEpoch = _v8
	_v10, _e11 := ssz.DecodeUint64(s)
	if _e11 != nil {
		return _e11
	}
	obj.ActivationEpoch = _v10
	_v12, _e13 := ssz.DecodeUint64(s)
	if _e13 != nil {
		return _e13
	}
	obj.ExitEpoch = _v12
	_v14, _e15 := ssz.DecodeUint64(s)
	if _e15 != nil {
		return _e15
	}
	obj.WithdrawableEpoch = _v14
	return nil
}

func (obj *VoluntaryExit) SizeSSZ() int {
	s := 16
	return s
}

func (obj *VoluntaryExit) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.Epoch = _v0
	_v2, _e3 := ssz.DecodeUint64(s)
	if _e3 != nil {
		return _e3
	}
	obj.ValidatorIndex = _v2
	return nil
}

func (obj *Withdrawal) SizeSSZ() int {
	s := 44
	return s
}

func (obj *Withdrawal) UnmarshalSSZ(s *ssz.Stream) error {
	_v0, _e1 := ssz.DecodeUint64(s)
	if _e1 != nil {
		return _e1
	}
	obj.Index = _v0
	_v2, _e3 := ssz.DecodeUint64(s)
	if _e3 != nil {
		return _e3
	}
	obj.ValidatorIndex = _v2
	_v4, _e5 := ssz.DecodeBytes(s)
	if _e5 != nil {
		return _e5
	}
	obj.Address = [20]byte(_v4)
	_v6, _e7 := ssz.DecodeUint64(s)
	if _e7 != nil {
		return _e7
	}
	obj.Amount = _v6
	return nil
}
